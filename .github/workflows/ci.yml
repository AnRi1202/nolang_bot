name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Lint with Ruff
        run: |
          poetry run ruff check .
          poetry run ruff format --check .
      
      - name: Type check with mypy (if available)
        run: |
          if poetry run which mypy >/dev/null 2>&1; then
            poetry run mypy .
          else
            echo "mypy not installed, skipping type check"
          fi
        continue-on-error: true
      
      - name: Test with pytest
        run: |
          if [ -d "tests" ] || find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
            poetry run pytest -v --tb=short
          else
            echo "No tests found, skipping test execution"
          fi